{"version":3,"sources":["api/checkoutForm/checkoutForm.controller.js"],"names":["index","show","postCieloApi","captureCieloApi","handlePayment","upsert","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","findById","params","id","findOne","slug","console","log","postPromise","resolve","request","method","body","Customer","Payment","MerchantOrderId","headers","MerchantId","process","env","MerchantKey","dataType","response","getBody","getHeaders","getHeader","getCode","error","putPromise","AuthorizationResponse","Links","Href","PaymentId","responsePost","JSON","parse","reqAuth","create","responseCreate","responsePut","CaptureResponse","findOneAndUpdate","$set","setDefaultsOnInsert","runValidators","_id"],"mappings":"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","file":"checkoutForm.controller.js","sourcesContent":["/*\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/checkoutForm              ->  index\n * POST    /api/checkoutForm              ->  create\n * GET     /api/checkoutForm/:id          ->  show\n * PUT     /api/checkoutForm/:id          ->  upsert\n * PATCH   /api/checkoutForm/:id          ->  patch\n * DELETE  /api/checkoutForm/:id          ->  destroy\n */\n\n// 'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport CheckoutForm from './checkoutForm.model';\nimport requestify from 'requestify';\n// const winston = require('winston');\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Transaction\nexport function index(req, res) {\n  return CheckoutForm.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Transaction from the DB from id or from slug...\nexport function show(req, res) {\n  return CheckoutForm.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(err => {\n      CheckoutForm.findOne({slug: req.params.id}).exec()\n      .then(handleEntityNotFound(res))\n      .then(respondWithResult(res))\n      .catch(handleError(err));\n    });\n}\n\nexport function postCieloApi(req, res) {\n  console.log('postCieloApi foi chamado');\n  const postPromise = new Promise(function(resolve, reject) {\n    requestify.request('https://apisandbox.cieloecommerce.cielo.com.br/1/sales/', {\n      method: 'POST',\n      body: {\n        Customer: req.Customer,\n        Payment: req.Payment,\n        MerchantOrderId: req.MerchantOrderId,\n      },\n      headers: {\n        'Content-Type': 'application/json',\n        MerchantId: process.env.MerchantId,\n        MerchantKey: process.env.MerchantKey\n      },\n      dataType: 'json'\n    })\n    .then(function(response) {\n      console.log('Requestify deu certo no postCieloApi');\n      // get the response body\n      response.getBody();\n\n      // get the response headers\n      response.getHeaders();\n\n      // get specific response header\n      response.getHeader('Accept');\n\n      // get the code\n      response.getCode();\n\n      resolve(response.body);\n    })\n    .catch(error => {\n      console.log('Requestify no postCieloApi apresentou o seguinte erro: ', error);\n      reject(error);\n      return handleError(res);\n    });\n  });\n  return postPromise;\n}\n\nexport function captureCieloApi(req, res) {\n  console.log('captureCieloApi foi chamado');\n  const putPromise = new Promise(function (resolve, reject) {\n    requestify.request(req.req.body.AuthorizationResponse.Payment.Links[1].Href, {\n      method: 'PUT',\n      body: {\n        PaymentId: req.req.body.AuthorizationResponse.Payment.PaymentId,\n      },\n      headers: {\n        'Content-Type': 'application/json',\n        MerchantId: process.env.MerchantId,\n        MerchantKey: process.env.MerchantKey\n      },\n      dataType: 'json'\n    })\n    .then(function(response) {\n      console.log('requestify deu certo no captureCieloApi');\n      // get the response body\n      response.getBody();\n\n      // get the response headers\n      response.getHeaders();\n\n      // get specific response header\n      response.getHeader('Accept');\n\n      // get the code\n      response.getCode();\n\n      resolve(response.body);\n    })\n    .catch(error => {\n      console.log('Requestify no captureCieloApi apresentou o seguinte erro: ', error);\n      reject(error);\n      return handleError(res);\n    });\n  });\n  return putPromise;\n}\n\n\n// Creates a new Transaction in the DB\n// export function create(req, res) {\n  // console.trace(req.body);\n  // var info = req.body;\n  // var checkout = new CheckoutForm({MerchantOrderId: \"TESTE\"});\n\n  // console.trace(checkout);\n  // console.log(checkout);\n  // // checkout = postCieloApi(req, res).then(function(success) {\n  // //   console.trace(success);\n  // //   return success}\n  // // );  \n\n  // return postCieloApi(req, res)\n  // .then(function(success) {\n  //   CheckoutForm.Transactions.create(success);\n  //   console.trace(success);\n  //   return success}\n  // ).then(\n  //   CheckoutForm.save(req.body)\n  // ).then(respondWithResult(res, 201))\n  //  .catch(error => {\n  //     console.log('create na API da Transaction', error);\n  //     return handleError(res);\n  //  });\n\n\n  // chamar post Cielo e colocar no CheckoutForm\n  // return CheckoutForm.create(req.body)\n  //   .then(function() {\n  //     return postCieloApi(req, res)\n  //     .then(saveAuthor)\n  //   })\n  //   .then(respondWithResult(res, 201))\n  //   .catch(error => {\n  //     console.log('create na API da Transaction', error);\n  //     return handleError(res);\n  //   });\n// }\n\nexport function handlePayment(req, res) {\n  return postCieloApi(req.body)\n  .then(function(responsePost) {\n    req.body.AuthorizationResponse = JSON.parse(responsePost);\n    return req.body;\n  })\n  .then(function(reqAuth) {\n    return CheckoutForm.create(reqAuth)\n    .then(respondWithResult(res, 201))\n    .catch(error => {\n      console.log('create na API da Transaction', error);\n      return handleError(res);\n    });\n  })\n  .then(function(responseCreate) {\n    return captureCieloApi(responseCreate)\n    .then(function(responsePut) {\n      req.body.CaptureResponse = JSON.parse(responsePut);\n      return CheckoutForm.findOneAndUpdate({MerchantOrderId: req.body.MerchantOrderId }, {$set: req.body}, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n      .catch(error => {\n        console.log('Update na API Transactions got an error: ', error);\n        return handleError(res);\n      });\n    });\n  })\n  .catch(error => {\n    console.log('create na API da Transaction', error);\n    return handleError(res);\n  });\n}\n\n// Upserts the given Thing in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return CheckoutForm.findOneAndUpdate({_id: req.params.id}, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Transaction in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return CheckoutForm.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Transaction from the DB\nexport function destroy(req, res) {\n  return CheckoutForm.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}