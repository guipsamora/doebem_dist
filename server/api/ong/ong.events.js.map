{"version":3,"sources":["api/ong/ong.events.js"],"names":["OngEvents","setMaxListeners","events","save","remove","e","event","schema","post","emitEvent","doc","emit","_id"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;AACA;;;;;;AACA,IAAIA,YAAY,0BAAhB;;AAEA;AACAA,UAAUC,eAAV,CAA0B,CAA1B;;AAEA;AACA,IAAIC,SAAS;AACXC,QAAM,MADK;AAEXC,UAAQ;AAFG,CAAb;;AAKA;AACA,KAAI,IAAIC,CAAR,IAAaH,MAAb,EAAqB;AACnB,MAAII,QAAQJ,OAAOG,CAAP,CAAZ;AACA,gBAAIE,MAAJ,CAAWC,IAAX,CAAgBH,CAAhB,EAAmBI,UAAUH,KAAV,CAAnB;AACD;;AAED,SAASG,SAAT,CAAmBH,KAAnB,EAA0B;AACxB,SAAO,UAASI,GAAT,EAAc;AACnBV,cAAUW,IAAV,CAAkBL,KAAlB,SAA2BI,IAAIE,GAA/B,EAAsCF,GAAtC;AACAV,cAAUW,IAAV,CAAeL,KAAf,EAAsBI,GAAtB;AACD,GAHD;AAID;;kBAEcV,S","file":"ong.events.js","sourcesContent":["/**\n * Ongs model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nimport Ong from './ong.model';\nvar OngEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nOngEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  save: 'save',\n  remove: 'remove'\n};\n\n// Register the event emitter to the model events\nfor(var e in events) {\n  let event = events[e];\n  Ong.schema.post(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    OngEvents.emit(`${event}:${doc._id}`, doc);\n    OngEvents.emit(event, doc);\n  };\n}\n\nexport default OngEvents;\n"]}